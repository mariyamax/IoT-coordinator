# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import hub.grpc_server.protos.hub_pb2 as hub__pb2


class HubInfoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSensorData = channel.unary_unary(
                '/com.example.qrpc.HubInfoService/GetSensorData',
                request_serializer=hub__pb2.SensorDataRequest.SerializeToString,
                response_deserializer=hub__pb2.SensorDataResponse.FromString,
                )
        self.GetSensorsData = channel.unary_unary(
                '/com.example.qrpc.HubInfoService/GetSensorsData',
                request_serializer=hub__pb2.SensorsDataRequest.SerializeToString,
                response_deserializer=hub__pb2.SensorsDataResponse.FromString,
                )
        self.GetAllSensorsList = channel.unary_unary(
                '/com.example.qrpc.HubInfoService/GetAllSensorsList',
                request_serializer=hub__pb2.AllSensorsListRequest.SerializeToString,
                response_deserializer=hub__pb2.AllSensorsListResponse.FromString,
                )
        self.GetAllSensorsData = channel.unary_unary(
                '/com.example.qrpc.HubInfoService/GetAllSensorsData',
                request_serializer=hub__pb2.AllSensorsDataRequest.SerializeToString,
                response_deserializer=hub__pb2.AllSensorsDataResponse.FromString,
                )
        self.GetValuesByTimeStamp = channel.unary_unary(
                '/com.example.qrpc.HubInfoService/GetValuesByTimeStamp',
                request_serializer=hub__pb2.TimeRequest.SerializeToString,
                response_deserializer=hub__pb2.TimeResponse.FromString,
                )


class HubInfoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetSensorData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSensorsData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllSensorsList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllSensorsData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetValuesByTimeStamp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HubInfoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSensorData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSensorData,
                    request_deserializer=hub__pb2.SensorDataRequest.FromString,
                    response_serializer=hub__pb2.SensorDataResponse.SerializeToString,
            ),
            'GetSensorsData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSensorsData,
                    request_deserializer=hub__pb2.SensorsDataRequest.FromString,
                    response_serializer=hub__pb2.SensorsDataResponse.SerializeToString,
            ),
            'GetAllSensorsList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllSensorsList,
                    request_deserializer=hub__pb2.AllSensorsListRequest.FromString,
                    response_serializer=hub__pb2.AllSensorsListResponse.SerializeToString,
            ),
            'GetAllSensorsData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllSensorsData,
                    request_deserializer=hub__pb2.AllSensorsDataRequest.FromString,
                    response_serializer=hub__pb2.AllSensorsDataResponse.SerializeToString,
            ),
            'GetValuesByTimeStamp': grpc.unary_unary_rpc_method_handler(
                    servicer.GetValuesByTimeStamp,
                    request_deserializer=hub__pb2.TimeRequest.FromString,
                    response_serializer=hub__pb2.TimeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.example.qrpc.HubInfoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HubInfoService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetSensorData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.example.qrpc.HubInfoService/GetSensorData',
            hub__pb2.SensorDataRequest.SerializeToString,
            hub__pb2.SensorDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSensorsData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.example.qrpc.HubInfoService/GetSensorsData',
            hub__pb2.SensorsDataRequest.SerializeToString,
            hub__pb2.SensorsDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllSensorsList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.example.qrpc.HubInfoService/GetAllSensorsList',
            hub__pb2.AllSensorsListRequest.SerializeToString,
            hub__pb2.AllSensorsListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllSensorsData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.example.qrpc.HubInfoService/GetAllSensorsData',
            hub__pb2.AllSensorsDataRequest.SerializeToString,
            hub__pb2.AllSensorsDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetValuesByTimeStamp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.example.qrpc.HubInfoService/GetValuesByTimeStamp',
            hub__pb2.TimeRequest.SerializeToString,
            hub__pb2.TimeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
